name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: .python-version
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-test.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-test.txt

      - name: Run tests
        run: |
          python -m pytest -n auto tests/ -o addopts="--strict-markers --strict-config --cov=custom_components.smart_cover_automation --cov-report=term-missing --cov-report=xml --cov-report=json --cov-fail-under=80"

      - name: Generate coverage badge
        run: |
          python scripts/generate_coverage_badge.py

      - name: Commit coverage badge
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .github/badges/coverage.svg
          git diff --staged --quiet || git commit -m "Update coverage badge [skip ci]"
          git push
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version-file: .python-version
          cache: pip

      - name: Test integration loading
        shell: bash
        run: |
          python - <<'PY'
          import importlib.util
          from pathlib import Path

          const_path = Path('custom_components/smart_cover_automation/const.py')
          spec = importlib.util.spec_from_file_location('sca_const', const_path)
          const = importlib.util.module_from_spec(spec)
          assert spec and spec.loader
          spec.loader.exec_module(const)

          print(f"Integration {const.DOMAIN} module loaded successfully")
          print(f"Logger: {const.LOGGER.name}")
          PY

      - name: Validate manifest
        run: |
          python -c "
          import json
          with open('custom_components/smart_cover_automation/manifest.json') as f:
              manifest = json.load(f)
          required_keys = ['domain', 'name', 'version', 'documentation', 'issue_tracker']
          for key in required_keys:
              assert key in manifest, f'Missing required key: {key}'
          print('Manifest validation passed')
          "
